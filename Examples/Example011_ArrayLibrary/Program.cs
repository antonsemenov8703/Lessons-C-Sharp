void FillArray(int[] collection) //задали имя метода, аргументом дали название collection
{
    int length = collection.Length; //переменной длинна присваивается длинна массива, раньше делали int n = collection.Length
    int index = 0; // массив начинаем с нуля
    while(index<length) // пока индекс меньше длинны
    {
        collection[index]= new Random().Next(1,10); //обращаемся к аргументу коллекция на позицию индекс и положить туда новое случайное целое число из диапазона 1-10. Мы в массив коллекция присваиваем на каждый индекс случайное число пока индекс меньше длинны массива
        index++;
    }
}

void PrintArray(int[]col) //создадим метод на печать массива, аргумент называем специально разные имена
{
    int count = col.Length; //присвоили переменной каунт значение длинны массива
    int position = 0;       //позицию или индекс приравняли на нулевое значение
    while (position<count)  //по обычному принципу делаем счётчик цикла
    {
        Console.WriteLine(col[position]); // и тут вывод каждого элемента массива "кол" с помощью цикла
        position++;
    }
}

int IndexOf(int[] collection,int find) //метод отличный от void, он будет возвращать позицию, значит index , по этому integer 
// В качестве аргумента будет приходить массив коллекция и какой-то элемент файнд, т.е. то что будем запрашивать на поиск
{
    int count = collection.Length;
    int index = 0;
    //int position = 0;
    position = -1; // программисты договорились так обозначать позицию, если ни один из элементов не обнаружен, то на экран будет выводиться -1 и будет понятно, что элемент не найден (можно ещё и сделать специальный вывод информации, если такое значение будет на выходе)

    while(index<count)
    {
        if(collection[index] == find)
        {
            position = index;
            break;
        }
        index++;
    }
    return position;
}

int[]array=new int[10]; //определили массив, назвали его array, далее указали, что в массиве будет 10 элементов
                        //new int[10] - создай новый массив в котором будет 10 элементов, !! изначально он будет заполнен нулями

FillArray(array); //использовали метод для заполнения массива

array[4] = 4; //принудительно добавили четвёрки в массив, чтобы пороверить как работает программа
array[6] = 4;

PrintArray(array); //использовали метод для вывода значений массива
Console.WriteLine();

int pos = IndexOf(array, 4);
Console.WriteLine(pos);